<?php

class Domain_Order_Save
{
    public $type;

    public function __construct($type)
    {
        $this->type = $type;
    }

    public function save($orderId, $reviewer)
    {
        $model = new Model_Order();

        $order = $model->get($orderId);
        if (!$order || !in_array($order['flag'], array(0, -3))) {
            throw new PhalApi_Exception_BadRequest('订单不存在', 0);
        }
        if (DI()->userInfo['userId'] != $order['createUser']) {
            throw new PhalApi_Exception_BadRequest('没有权限', 0);
        }
        if ($order['totalCnt'] == 0) {
            throw new PhalApi_Exception_BadRequest('空订单不能提交！', 0);
        }

        //验证审核人
        $domain = new Domain_Reviewer_Options();
        $role = $domain->getRole($this->type);

        $user_model = new Model_User();
        $user_group = $user_model->getUserGroup($reviewer);
        $user_group_array = explode(',', $user_group[0]['group_role']);

        if (!in_array($role, $user_group_array)) {
            throw new PhalApi_Exception_BadRequest('审核人没有权限！', 0);
        }

        $input = array(
            'flag'         => 1,
            'reviewer'     => $reviewer,
            'reviewerMemo' => '',
            'updateUser'   => DI()->userInfo['userId'],
            'updateTime'   => date('Y-m-d H:i:s'),
        );


        try {
            DI()->notorm->beginTransaction('db_demo');


            $num = $model->update($orderId, $input); // TODO: Change the autogenerated stub
            if (!$num) {
                throw new PDOException('提交失败', 1);
            }

            $log_model = new Model_LogOrder();
            $num = $log_model->insert(array(
                'logUser'    => DI()->userInfo['userId'],
                'logType'    => 'TOREVIEW',
                'logContent' => json_encode($input),
                'orderId'    => $orderId,
                'orderType'  => DI()->request->get('type'),
                'createTime' => date('Y-m-d H:i:s')
            ));
            if (!$num) {
                throw new PDOException('日志保存失败', 1);
            }

            //通知审核人
            $content = $this->toReviewerMsg($order['orderNo'], $order['totalMoney'], $order['createTime']);
            if (!Domain_Message_Msg::send($order['createUser'], $reviewer, $content, 3, $order['createCompany'])) {
                throw new PDOException('通知失败', 1);
            }

            DI()->notorm->commit('db_demo');
            return true;
        } catch (PDOException $e) {
            DI()->notorm->rollback('db_demo');
            if ($e->getCode() == 1) {
                throw new PhalApi_Exception_BadRequest($e->getMessage(), 0);
            }
            throw new PhalApi_Exception_InternalServerError('服务器错误', 0);
        }
    }

    public function toReviewerMsg($orderNo, $totalMoney, $createTime)
    {
        $prefix = array(
            'PLAN'        => '采购计划单',   //采购计划单
            'ARRIVAL'     => '到货单',   //到货单
            'RETURN'      => '退货单',   //退货单
            'PURCHASE_IN' => '采购入库单',   //采购入库单
            'OTHER_IN'    => '其他入库单',   //其他入库单
            'ALLOT_IN'    => '调拨入库单',   //调拨入库单
            'ALLOT_OUT'   => '调拨出库单',   //调拨出库单
            'USE_OUT'     => '领用出库单',   //领用出库单
            'OTHER_OUT'   => '其他出库单',   //其他出库单
            'INVENTORY'   => '盘点单',    //盘点单,
            'SALE_OUT'    => '销售单'
        );

        return $prefix[$this->type] . '待审核：单号:' . $orderNo . ',金额:' . $totalMoney . ',时间:' . $createTime;
    }
}